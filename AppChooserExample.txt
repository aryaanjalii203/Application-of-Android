This Kotlin project demonstrates how to use an App Chooser to share text content from an Android application. The app features a single button that, when clicked, opens a system dialog allowing the user to select an app to share the provided text. Key highlights include:

    Integration of the Android Intent System for seamless sharing.
    Example usage of Intent.ACTION_SEND and Intent.createChooser for flexible content sharing.
    Clean and intuitive user interface defined in XML.


KOTLIN FILE CODE

package com.example.cse224

import android.content.Intent
import android.os.Bundle
import android.widget.Button
import androidx.activity.enableEdgeToEdge
import androidx.appcompat.app.AppCompatActivity
import androidx.core.view.ViewCompat
import androidx.core.view.WindowInsetsCompat

class AppChooserClass : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContentView(R.layout.activity_app_chooser_class)
        val s1 = findViewById<Button>(R.id.send1)
        s1.setOnClickListener {
            shareText("this text is being shared")
        }
        11
        
    }
    private fun shareText(msg: String) {
        var send: Intent =Intent().apply {
            action= Intent.ACTION_SEND
            putExtra(Intent.EXTRA_TEXT,msg)
            type="text/plain"
        }
        var i: Intent= Intent.createChooser(send,"share via")
        startActivity(i)
    }
}


XML FILE CODE

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".AppChooserClass">

    <Button
        android:id="@+id/send1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Send"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>